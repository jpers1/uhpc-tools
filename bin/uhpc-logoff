#!/usr/bin/env bash
#
# uhpc-logoff: Attempt to "detach" from sattach session while
# keeping this shell alive in the background.
#
# *** WARNING / DISCLAIMER ***
# Slurm's 'sattach' was not really designed for a clean "detach"
# like tmux or screen. The hack below tries to ignore SIGHUP and
# sever the controlling TTY, but it's not guaranteed in all setups.
# If the shell dies, there's no perfect remedy. For robust usage,
# consider tmux/screen.
#
# Use Case:
#   1) You are currently attached to a remote shell via "uhpc-login".
#   2) You run "uhpc-logoff".
#   3) The shell tries to remain running in the background, so you
#      can re-attach later with "uhpc-login <job> <shell>" again.
#
# If it fails in your cluster environment, you may simply have to use
# 'exit' or rely on tmux.

# 1) Attempt to ignore hangups
trap '' HUP

# 2) Print a message
echo "[uhpc-logoff] Attempting to detach from this shell. It will remain running (if Slurm permits)."

# 3) Sever standard I/O so 'sattach' has nothing to read or write
exec </dev/null >/dev/null 2>&1

# 4) Disown so it won't get killed if the controlling TTY goes away
disown -a

# 5) Sleep forever (or until scancel, or job time expires)
#    The shell is now effectively unreachable unless you reattach
#    with sattach, which forcibly rebinds the TTY.
#    This step is necessary; otherwise bash might exit upon losing its TTY.
while true; do
    sleep 86400
done
